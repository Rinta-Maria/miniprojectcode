/* app.post('/admin_up', async (req, res) => {
    try {
      const password = req.body.password;
      const cpassword = req.body.ConfirmPassword;
  
      if (password === cpassword) {
        console.log('Password is correct');
  
        // Hash the password
        const hashedPassword = await bcrypt.hash(password, 10);
  
        // Create a new user using the Register model
        const adminEmployee = new Admin({
          name: req.body.name,
          email: req.body.email,
          password: hashedPassword,
          token: '' ,// Initialize the token field with an empty string
        });
  
        // Save the user to the database
        const registered = await adminEmployee.save();
  
        // Generate a JWT token
        const token = jwt.sign({ userId: registered._id }, 'your_secret_key');
  
        // Update the user's token field
        registered.token = token;
        await registered.save();
  
        // Set the token as a cookie
        res.cookie('token', token, { httpOnly: true });
  
        // Redirect to the login page
        return res.redirect('/admin');
      } else {
        console.log('Password is incorrect');
        return res.status(400).json({ message: 'Password mismatch' });
      }
    } catch (error) {
      console.log(error);
      console.log('Error occurred while registering');
        res.render('regester');
  }});*/